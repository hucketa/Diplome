extends Area2D

signal hit(damage)

@onready var damage_timer: Timer = Timer.new()

func _ready():
	print("–•–∞—Ä—Ç–±–æ–∫—Å –≥–æ—Ç–æ–≤–∏–π.")
	
	connect("area_entered", Callable(self, "_on_area_entered"))
	connect("area_exited", Callable(self, "_on_area_exited"))
	
	damage_timer.wait_time = 1.0
	damage_timer.one_shot = false
	damage_timer.connect("timeout", Callable(self, "_apply_damage"))
	add_child(damage_timer)

var attacker: Node2D = null

func _on_area_entered(area):
	if not area.is_in_group("attack"):
		return
	if not area.has_method("get_damage"):
		print("# ‚ùå –Ü–≥–Ω–æ—Ä –æ–±'—î–∫—Ç–∞ –±–µ–∑ get_damage:", area.name)
		return
	if area.get_parent() == get_parent():
		print("# ‚ùå –•–∞—Ä—Ç–±–æ–∫—Å —ñ–≥–Ω–æ—Ä—É—î –∞—Ç–∞–∫—É –≤—ñ–¥ –≤–ª–∞—Å–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞.")
		return
	if area.get_parent().is_in_group("Enemy") and get_parent().is_in_group("Enemy"):
		print("# ‚ùå –•–∞—Ä—Ç–±–æ–∫—Å —ñ–≥–Ω–æ—Ä—É—î –∞—Ç–∞–∫—É –≤—ñ–¥ —ñ–Ω—à–æ–≥–æ —Å–∫–µ–ª–µ—Ç–∞.")
		return  # üîπ –ì–æ–ª–æ–≤–Ω–µ –ø—Ä–∞–≤–∏–ª–æ!
	print("# ‚úÖ –í–∏—è–≤–ª–µ–Ω–æ –∞—Ç–∞–∫—É –≤—ñ–¥:", area.name)
	attacker = area
	_apply_damage()
	damage_timer.start()


func _on_area_exited(area):
	if area == attacker:
		print("‚úÖ –ê—Ç–∞–∫—É—é—á–∏–π –ø–æ–∫–∏–Ω—É–≤ —Ö–∞—Ä—Ç–±–æ–∫—Å. –ó—É–ø–∏–Ω—è—î–º–æ —É—Ä–æ–Ω.")
		damage_timer.stop()
		attacker = null

func _apply_damage():
	if attacker and is_instance_valid(attacker):
		var damage = attacker.get_damage()
		emit_signal("hit", damage)
		print("üéØ –û—Ç—Ä–∏–º–∞–Ω–æ —É—Ä–æ–Ω:", damage)
		if get_parent().has_method("take_damage"):
			get_parent().take_damage(damage)
	else:
		print("‚ùå –ù–µ–º–∞—î –∞—Ç–∞–∫—É—é—á–æ–≥–æ, —Ç–∞–π–º–µ—Ä –∑—É–ø–∏–Ω–µ–Ω–æ.")
		damage_timer.stop()
